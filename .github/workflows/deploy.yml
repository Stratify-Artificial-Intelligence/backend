name: Build and Deploy to ECR and ECS

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'prod'
        type: choice
        options:
          - prod
          - dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      # If the workflow is triggered manually, use the input environment
      # On push to main (environment will not be set), automatically deploy to 'dev'
      name: ${{ github.event.inputs.environment || 'dev' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set environment variables
        run: |
          echo "REPO_URI=${{ vars.ECR_REPOSITORY }}" >> $GITHUB_ENV
          echo "CLUSTER=${{ vars.ECS_CLUSTER }}" >> $GITHUB_ENV
          echo "SERVICE=${{ vars.ECS_SERVICE }}" >> $GITHUB_ENV
          echo "IMAGE_TAG=latest" >> $GITHUB_ENV

      - name: Build and push image
        run: |
          docker build -t $REPO_URI:$IMAGE_TAG -f backend/Dockerfile .
          docker push $REPO_URI:$IMAGE_TAG

      - name: Deploy to ECS
        run: |
          aws ecs update-service \
            --cluster $CLUSTER \
            --service $SERVICE \
            --force-new-deployment
